/**
 *  Copyright 2022 Thorsten Luenborg 
 *  @license MIT
**/var VueBridge=function(n,o){"use strict";const u=!0,l={methods:{$_attrs(){return this.$attrs},$_listeners(){return this.$listeners},$_class(){return""},$_style(){return""}}},s={beforeCreate(){{const e=this.$options;e.beforeUnmount&&(e.beforeDestroy=e.beforeUnmount,delete e.beforeUnmount),e.unmounted&&(e.destroyed=e.unmounted,delete e.unmounted)}}},d={beforeCreate(){this.$set=(e,t,i)=>{e[t]=i},this.$delete=(e,t)=>{Array.isArray(e)?e.splice(+t,1):delete e[t]}}},a={beforeMount:"bind",beforeCreate:null,mounted:"inserted",beforeUpdate:null,update:null,updated:"componentUpdated",beforeUnMount:null,unmounted:"unbind"};function c(e){{const t={};return Object.keys(e).forEach(i=>{const r=a[i];r&&(t[r]=f(e[i]))}),t}}function f(e){return(t,i,r,v)=>{const V=r.context;return i.instance=V,e(t,i,r,v)}}function m(e){h(e.props)&&p(e.emits)&&(b(e.model),e.model={prop:"modelValue",event:"update:modelValue"})}function p(e=[]){return(Array.isArray(e)?e:Object.keys(e)).includes("update:modelValue")}function h(e={}){return Object.prototype.hasOwnProperty.call(e,"modelValue")}function b(e){if(!!e&&(e.prop!=="modelValue"||e.event!=="update:modelValue"))throw new Error("[@vue-bridge/runtime]: don't use the `model` option on components. this plugin needs to override it to ensure v-model cross-compat")}const M={beforeCreate(){Object.defineProperty(this,"$allSlots",{get(){return this.$scopedSlots}})}},y=e=>(typeof e=="function"&&(e={setup:e,name:e.name}),e.mixins=e.mixins||[],e.mixins.push(M),m(e),e.mixins.push(s),o.defineComponent(e));return n.attrsListenersMixin=l,n.defineComponent=y,n.defineDirective=c,n.isVue2=u,n.lifecycleMixin=s,n.setDeleteMixin=d,Object.defineProperty(n,"__esModule",{value:!0}),n[Symbol.toStringTag]="Module",n}({},VueCompositionAPI);
